require 'spec_helper_acceptance'

test_name 'foreman class'

describe 'foreman class' do
  let(:client){ only_host_with_role( hosts, 'client' ) }
  let(:server){ only_host_with_role( hosts, 'server' ) }
  let(:client_fqdn){ fact_on( client, 'fqdn' ) }
  let(:server_fqdn){ fact_on( server, 'fqdn' ) }
  let(:client_rel){ fact_on( client, 'operatingsystemmajrelease' ) }
  let(:server_rel){ fact_on( server, 'operatingsystemmajrelease' ) }

#  let(:manifest) {
#    <<-EOS
#      class { 'foreman':
#        admin_password: 'password',
#      }
#
#      class { 'foreman::proxy::trusted_hosts':
#        [#{server}],
#      }
#    EOS
#  }

  ### LDAP passwords: 123$%^qweRTY
  let(:server_default_hieradata) {
      <<-EOS
# Obviously include all other necessary classes for this host. This is only to show
# some sample site data you may wish to have. If the default configuration works for you,
# then this won't be needed.
classes:
  - foreman
  - site::foreman
  - simp::server
  - simp::ldap_server
  - simp::rsyslog::stock
  - simp::sssd::client
  - simplib::cron
  - tcpwrappers
  - pam
  - pam::access

# Eliminate requirements on unnecessary components for testing
simp::server::allow_simp_user : false
simp::server::enable_rsync_shares : false
simp::server::enable_puppetdb : false
simplib::cron::use_rsync : false
auditd::enable_auditing : false
auditd::at_boot : false

# This isn't a race car...
pupmod::master::sysconfig::java_start_memory : 128m
pupmod::master::sysconfig::java_max_memory : 128m
pupmod::master::sysconfig::java_max_perm_size : 128m

# By default, the admin user password will be autogenerated and nonsensical looking.
# Set that here if you wish to have control over it.
foreman::admin_password : 'No one will never hack this!'

# These are the hosts that will connect to your Foreman proxy. You'll want to make sure
# all hosts who are reporting to Foreman appear here.
foreman::proxy::trusted_hosts :
  - #{server_fqdn}
  - #{client_fqdn}

# Make sure reporting is turned on in Puppet!
pupmod::report : true

#
# ------------------------------------------------------------------------------
# extra hieradata needed to configure dependencies
client_nets:
  - 'ALL'
use_iptables: true
use_sssd: true
sssd::domains:
  - 'LDAP'
apache::rsync_web_root: false
rsync::server: 127.0.0.1

# ------------------------------------------------------------------------------

# === use_ldap ===
# Whether or not to use LDAP on this system.
# If you disable this, modules will not attempt to use LDAP where possible.
use_ldap: true

# === ldap::base_dn ===
# The Base DN of the LDAP server
"ldap::base_dn": "dc=fakedomain"

# === ldap::bind_dn ===
# LDAP Bind Distinguished Name
"ldap::bind_dn": "cn=hostAuth,ou=Hosts,%{hiera('ldap::base_dn')}"

# === ldap::bind_pw ===
# The LDAP bind password
"ldap::bind_pw": "123$%^qweRTY"

# === ldap::bind_hash ===
# The salted LDAP bind password hash
"ldap::bind_hash": "{SSHA}Tva27L86sfTyLS059Es0S4lsHEzvevIH"

# === ldap::sync_dn ===
#
"ldap::sync_dn": "cn=LDAPSync,ou=Hosts,%{hiera('ldap::base_dn')}"

# === ldap::sync_pw ===
# The LDAP sync password
"ldap::sync_pw": "123$%^qweRTY"

# === ldap::sync_hash ===
#
"ldap::sync_hash": "{SSHA}xr8JTXnSdOlqFJfP6tNwDNmGfGKKhdbr"

# === ldap::root_dn ===
# The LDAP root DN.
"ldap::root_dn": "cn=LDAPAdmin,ou=People,%{hiera('ldap::base_dn')}"

# === ldap::root_hash ===
# The LDAP root password hash.
#  If you set this with simp config, type the password and the hash will be
# generated for you.'
"ldap::root_hash": "{SSHA}cbyG41/oc3qhJkUpkrjqz60ZUizBxTHJ"

# === ldap::master ===
# This is the LDAP master in URI form (ldap://server)
"ldap::master": "ldap://#{server_fqdn}"

# === ldap::uri ===
# List of OpenLDAP servers in URI form (ldap://server)
"ldap::uri":
  - "ldap://#{server_fqdn}"

EOS
  }

  # This needs to happen first for a clean run.
  # Note: This is in *addition* to the repos specified in the nodeset files.
  let(:setup_repos_manifest) {
    <<-EOS
      # Configure EPEL
      # Mirrorlists and direct download installs can be problematic in Beaker

      exec { 'Install EPEL':
        command   => '/usr/bin/curl -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-#{server_rel}.noarch.rpm && yum -y localinstall epel-release-latest-#{server_rel}.noarch.rpm && /bin/sed -i "/mirrorlist/d" /etc/yum.repos.d/epel.repo && /bin/sed -i "s/#baseurl/baseurl/" /etc/yum.repos.d/epel.repo',
        cwd       => '/tmp',
        creates   => '/etc/yum.repos.d/epel.repo'
      }

      package{'centos-release-scl': ensure => 'present', }
    EOS
  }

  let(:server_manifest) {
    <<-EOS
      hiera_include('classes')

      ::pam::access::manage { "Allow 'vagrant'":
          users   => 'vagrant',
          origins => ['ALL']
      }

      ::tcpwrappers::allow{ 'sshd':
        pattern => 'ALL',
      }

      ::iptables::add_tcp_stateful_listen{ 'allow_sshd':
              client_nets => ['any'],
              dports      => ['22'],
      }

      class site::foreman {
        # Adds an LDAP authentication source to Foreman. This assumes this authentication source
        # is LDAP and already exists. By default, this define will
        foreman::auth_source { '#{server_fqdn}':
          ldap_server => $::fqdn,
        }

        $user_password = 'Simple Password'

        foreman::user { 'amazing.user':
          auth_source => 'Internal', # '#{server_fqdn}',
          web_admin   => true,
          firstname   => 'Amazing',
          lastname    => 'User',
          password    => $user_password
        }

        foreman::user { 'untrustworth.user':
          auth_source => 'Internal', # '#{server_fqdn}',
          web_admin   => false,      # This is the default, but want to show the difference from above.
          firstname   => 'Untrustworthy',
          lastname    => 'User',
          password    => $user_password
        }
      }
    EOS
  }


  context 'default parameters' do
    # Using puppet_apply as a helper
    it 'should work with no errors' do

      if server['repos']
        server['repos'].each_pair do |repo,metadata|
          repo_manifest = <<-EOS
            yumrepo { #{repo}:
              baseurl => '#{metadata[:url]}',
              gpgkey => '#{metadata[:gpgkeys].join(" ")}'
            }
          EOS
          apply_manifest_on(server, repo_manifest, :catch_failures => true)
        end
      end

      # Make sure we have the correct values in place for the Puppet config
      # that SIMP expects
      on(server, 'puppet config set stringify_facts false')
      on(server, 'puppet config set digest_algorithm sha256')

      # Substitute for installing the simp-bootstrap RPM or including the full
      # ::simp class.
      on(server, 'mkdir /usr/local/sbin/simp')
      on(server, 'mkdir /var/lib/puppet/simp')

      # We need a Puppet CA and cert for Foreman to function
      on(server, 'puppet cert list --all')
      on(server, "puppet cert generate #{server_fqdn}")

      set_hieradata_on( server, server_default_hieradata, 'default' )
      apply_manifest_on(server, setup_repos_manifest, :catch_failures => true)
      apply_manifest_on(server, server_manifest, :catch_failures => true)

      # The first two runs of this will *not* be idempotent because of file
      # checksum changes in the Puppet configuration files themselves. Not much
      # can be done here since it's a bootstrapping issue
      apply_manifest_on(server, server_manifest, :catch_failures => true)
    end

    it 'should be idempotent' do
      apply_manifest_on(server, server_manifest, :catch_changes => true)
    end

    describe package('foreman') do
      it { is_expected.to be_installed }
    end

    describe service('foreman') do
      it { is_expected.to be_enabled }
      it { is_expected.to be_running }
    end
  end
end
